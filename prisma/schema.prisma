generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type CardsForeignData {
  faceName   String?
  flavorText String?
  language   String
  name       String
  text       String?
  type       String?
}

type CardsIdentifiers {
  scryfallOracleId String
}

type CardsLeadershipSkills {
  brawl       Boolean
  commander   Boolean
  oathbreaker Boolean
}

type CardsLegalities {
  alchemy         String?
  brawl           String?
  commander       String?
  duel            String?
  explorer        String?
  future          String?
  gladiator       String?
  historic        String?
  historicbrawl   String?
  legacy          String?
  modern          String?
  oldschool       String?
  pauper          String?
  paupercommander String?
  penny           String?
  pioneer         String?
  premodern       String?
  standard        String?
  vintage         String?
}

type CardsPurchaseUrls {
  cardKingdom       String?
  cardKingdomEtched String?
  cardKingdomFoil   String?
  cardmarket        String?
  tcgplayer         String?
  tcgplayerEtched   String?
}

type CardsRulings {
  date String
  text String
}

type IdentifiersForeignData {
  faceName     String?
  flavorText   String?
  language     String
  multiverseId Int?
  name         String
  text         String?
  type         String?
}

type IdentifiersIdentifiers {
  cardKingdomEtchedId      String?
  cardKingdomFoilId        String?
  cardKingdomId            String?
  cardsphereId             String?
  mcmId                    String?
  mcmMetaId                String?
  mtgArenaId               String?
  mtgjsonFoilVersionId     String?
  mtgjsonNonFoilVersionId  String?
  mtgjsonV4Id              String
  mtgoFoilId               String?
  mtgoId                   String?
  multiverseId             String?
  scryfallId               String
  scryfallIllustrationId   String?
  scryfallOracleId         String
  tcgplayerEtchedProductId String?
  tcgplayerProductId       String?
}

type IdentifiersLeadershipSkills {
  brawl       Boolean
  commander   Boolean
  oathbreaker Boolean
}

type IdentifiersLegalities {
  alchemy         String?
  brawl           String?
  commander       String?
  duel            String?
  explorer        String?
  future          String?
  gladiator       String?
  historic        String?
  historicbrawl   String?
  legacy          String?
  modern          String?
  oldschool       String?
  pauper          String?
  paupercommander String?
  penny           String?
  pioneer         String?
  premodern       String?
  standard        String?
  vintage         String?
}

type IdentifiersPurchaseUrls {
  cardKingdom       String?
  cardKingdomEtched String?
  cardKingdomFoil   String?
  cardmarket        String?
  tcgplayer         String?
  tcgplayerEtched   String?
}

type IdentifiersRelatedCards {
  reverseRelated String[]
  spellbook      String[]
}

type IdentifiersRulings {
  date String
  text String
}

model cards {
  id                    String                 @id @default(auto()) @map("_id") @db.ObjectId
  asciiName             String?
  colorIdentity         String[]
  colorIndicator        String[]
  colors                String[]
  convertedManaCost     Float
  edhrecRank            Int?
  faceConvertedManaCost Float?
  faceManaValue         Float?
  faceName              String?
  foreignData           CardsForeignData[]
  hand                  String?
  identifiers           CardsIdentifiers
  isFunny               Boolean?
  isReserved            Boolean?
  keywords              String[]
  layout                String
  leadershipSkills      CardsLeadershipSkills?
  legalities            CardsLegalities
  life                  String?
  loyalty               String?
  manaCost              String?
  manaValue             Float
  name                  String
  power                 String?
  printings             String[]
  purchaseUrls          CardsPurchaseUrls
  rulings               CardsRulings[]
  side                  String?
  subtypes              String[]
  supertypes            String[]
  text                  String?
  toughness             String?
  type                  String
  types                 String[]
}

model identifiers {
  id                    String                       @id @default(auto()) @map("_id") @db.ObjectId
  artist                String?
  asciiName             String?
  attractionLights      Int[]
  availability          String[]
  boosterTypes          String[]
  borderColor           String
  colorIdentity         String[]
  colorIndicator        String[]
  colors                String[]
  convertedManaCost     Float?
  duelDeck              String?
  edhrecRank            Int?
  faceConvertedManaCost Float?
  faceFlavorName        String?
  faceManaValue         Float?
  faceName              String?
  finishes              String[]
  flavorName            String?
  flavorText            String?
  foreignData           IdentifiersForeignData[]
  frameEffects          String[]
  frameVersion          String
  hand                  String?
  hasContentWarning     Boolean?
  hasFoil               Boolean
  hasNonFoil            Boolean
  identifiers           IdentifiersIdentifiers
  isAlternative         Boolean?
  isFullArt             Boolean?
  isFunny               Boolean?
  isOnlineOnly          Boolean?
  isOversized           Boolean?
  isPromo               Boolean?
  isRebalanced          Boolean?
  isReprint             Boolean?
  isReserved            Boolean?
  isStarter             Boolean?
  isStorySpotlight      Boolean?
  isTextless            Boolean?
  isTimeshifted         Boolean?
  keywords              String[]
  language              String
  layout                String
  leadershipSkills      IdentifiersLeadershipSkills?
  legalities            IdentifiersLegalities?
  life                  String?
  loyalty               String?
  manaCost              String?
  manaValue             Float?
  name                  String
  number                String
  originalPrintings     String[]
  originalReleaseDate   String?
  originalText          String?
  originalType          String?
  otherFaceIds          String[]
  power                 String?
  printings             String[]
  promoTypes            String[]
  purchaseUrls          IdentifiersPurchaseUrls?
  rarity                String?
  rebalancedPrintings   String[]
  relatedCards          IdentifiersRelatedCards?
  reverseRelated        String[]
  rulings               IdentifiersRulings[]
  securityStamp         String?
  setCode               String
  side                  String?
  signature             String?
  subset                String[]
  subtypes              String[]
  supertypes            String[]
  text                  String?
  toughness             String?
  type                  String
  types                 String[]
  uuid                  String
  variations            String[]
  watermark             String?
}
